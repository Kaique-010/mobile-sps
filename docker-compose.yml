version: "3.9"

services:
  redis:
    image: redis:7-alpine
    container_name: mobile_sps_redis
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --tcp-keepalive 60
      --io-threads 4
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    sysctls:
      - net.core.somaxconn=65535

  backend:
    build:
      context: .
      cache_from:
        - mobile_sps_backend:latest
        - python:3.11-alpine
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: mobile_sps_backend:latest
    container_name: mobile_sps_backend
    restart: unless-stopped
    env_file: .env
    expose:
      - "8000"
    depends_on:
      redis:
        condition: service_started
    environment:
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=core.settings
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - GUNICORN_WORKERS=2
      - GUNICORN_THREADS=4
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 15s
      timeout: 5s
      retries: 2
      start_period: 20s

  caddy:
    image: caddy:2-alpine
    container_name: mobile_sps_caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      backend:
        condition: service_healthy

volumes:
  redis_data:
  caddy_data:
  caddy_config:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

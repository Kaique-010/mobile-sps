#!/bin/bash\nset -e\n\n# Fun√ß√£o para log com timestamp\nlog() {\n    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"\n}\n\nlog "üöÄ Iniciando container ULTRA-OTIMIZADO..."\n\n# Aguardar Redis (m√°ximo 10s)\nlog "‚è≥ Aguardando Redis..."\nfor i in {1..10}; do\n    if nc -z redis 6379; then\n        log "‚úÖ Redis conectado!"\n        break\n    fi\n    sleep 1\ndone\n\n# Pr√©-aquecimento PARALELO\nlog "üî• Iniciando pr√©-aquecimento paralelo..."\n(\n    # Coletar arquivos est√°ticos em background\n    python manage.py collectstatic --noinput --clear &\n    \n    # Aquecer cache em background\n    python -c "\n    import django\n    django.setup()\n    from django.core.cache import cache\n    cache.set('warmup', 'ready', 3600)\n    print('‚úÖ Cache aquecido')\n    " &\n    \n    wait\n) &\n\n# Aguardar pr√©-aquecimento\nwait\n\nlog "üöÄ Iniciando Gunicorn OTIMIZADO..."\nexec gunicorn core.wsgi:application \\n    --bind 0.0.0.0:8000 \\n    --workers ${GUNICORN_WORKERS:-2} \\n    --threads ${GUNICORN_THREADS:-4} \\n    --worker-class gevent \\n    --worker-connections 1000 \\n    --max-requests 1000 \\n    --max-requests-jitter 100 \\n    --preload \\n    --timeout 30 \\n    --keep-alive 5 \\n    --log-level info\n